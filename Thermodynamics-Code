H = lambda a,b,c,d,t: a + b * t + (c/(t**2)) + d * (t**2) #enthalpy definition
S = lambda a,b,c,d,t: (a/t) + (b) + (c/(t**3)) + d*t #entropy definition
temp1 = 0 #initializing variables
temp2 = 0
a = 0
b = 0
c = 0
d = 0
intervals = 1
temp1 = float(input("Input first temperature: ")) #inputs
print("First temperature is: " + str(temp1) + " K")
temp2 = float(input("Input second temperature: "))
print("Second temperature is: " + str(temp2) + " K")
a = float(input("Input first coefficient of equation: "))
print("First coefficient of equation is: " + str(a))
b = float(input("Input second coefficient of equation: "))
print("Second coefficient of equation is: " + str(b))   
c = float(input("Input third coefficient of equation: "))
print("Third coefficient of equation is: " + str(c))
d = float(input("Input fourth coefficient of equation: "))
print("Fourth coefficient of equation is: " + str(d))
while int(intervals) % 2 != 0: #checking if intervals can be divided by 2
    intervals = int(input("Please put in number of intervals: "))
    print("number of intervals is: " + str(intervals))
    
def simpsons(f1, a, b, c, d, t1, t2, n, sumT): #function
    x = (t2-t1) / n #calculating x
    
    sumT = f1(a,b,c,d,t1) + f1(a,b,c,d,t2) #first and last values
    
    for i in range(1,n,2): #For odd values
         sumT+= 4 * f1(a,b,c,d,(t1 + i * x))
         
    for i in range(2, n-1,2): #For even values
         sumT+= 2 * f1(a,b,c,d,(t1 + i * x))
    
    sumT = sumT *(x/3) #final answer
    
    return sumT
    
print("The enthalpy is: " + str(simpsons(H, a, b, c, d, temp1, temp2, intervals,0))) 
print("The entropy is: " + str(simpsons(S, a, b, c, d, temp1, temp2, intervals,0)))
